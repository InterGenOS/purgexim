#!/bin/bash
# -------------------------------------------------------------------------------------------
# purgexim: Simple cPanel server script to purge the Exim queue and re-check for SPAM buildup
# purgexim Version: 1.1
# Github: https://github.com/InterGenStudios/purgexim
# ---------------------------------------------------
# InterGenStudios: 4-12-15
# Copyright (c) 2015: Christopher 'InterGen' Cork  InterGenStudios
# URL: https://intergenstudios.com
# --------------------------------
# License: GPL-2.0+
# URL: http://opensource.org/licenses/gpl-license.php
# ---------------------------------------------------
# purgexim is free software:
# You may redistribute it and/or modify it under the terms of the
# GNU General Public License as published by the Free Software
# Foundation, either version 2 of the License, or (at your discretion)
# any later version.
# ------------------

#############################################
##-----------------------------------------##
## BEGIN - MAKE SURE WE'RE RUNNING AS ROOT ##
##-----------------------------------------##
#############################################

if [ "$(id -u)" != "0" ]; then
    tput bold
    tput setaf 1
    printf "\n\n"
    echo "--------"
    echo "WARNING!"
    echo "--------"
    echo
    tput sgr0
    echo "purgexim must be run as root!"
    echo "(Exiting now...)"
    printf "\n\n"
    exit 1
fi

###########################################
##---------------------------------------##
## END - MAKE SURE WE'RE RUNNING AS ROOT ##
##---------------------------------------##
###########################################

###########################################
##---------------------------------------##
## BEGIN - INITIAL VARIABLE DECLARATIONS ##
##---------------------------------------##
###########################################

# Sets countdown for queue buildup check
count=10

# Sets counter for queue buildup check
queuecheck=0

# Sets grep flag for spam source checking if buildup occurs
today="$(tail -1 /var/log/exim_mainlog | awk '{print $1}')"

# Sets purgexim version number
vers=1.1

#########################################
##-------------------------------------##
## END - INITIAL VARIABLE DECLARATIONS ##
##-------------------------------------##
#########################################

#######################
##-------------------##
## BEGIN - FUNCTIONS ##
##-------------------##
#######################

# Colors trailing text Red
RED () {
    tput bold
    tput setaf 1
}

# Colors trailing text Green
GREEN () {
    tput bold
    tput setaf 2
}

# Colors trailing text Yellow
YELLOW () {
    tput bold
    tput setaf 3
}

# Colors trailing text Blue
BLUE () {
    tput bold
    tput setaf 4
}

# Clears any preceding text color declarations
WHITE () {
tput sgr0
}

# Simple divider
SEPARATOR () {
    echo
    BLUE
    echo  --------------------------------
    echo
}

# Clears 7 lines when called
CLEARLINE () {
    tput cuu 7 && tput el
}

# Creates uniform look during script execution when called after any clear command
HEADER () {
echo
GREEN
echo "============================================================================"
WHITE
echo "  purgexim v$vers"
GREEN
echo "============================================================================"
WHITE
printf "\n\n"
}

# Checks for emails entering the queue within 20 seconds after purge and sets flag for check outcome
QUEUE_CHECK () {
while [ $count -gt 0 ]; do
    echo
    YELLOW
    echo Current Exim Queue Size: $(exim -bpc)
    if [ $(exim -bpc) -gt 0 ]; then
        let queuecheck=queuecheck+1
        let count=count-1
        echo
        echo "Exim Queue checks remaining: $count"
        SEPARATOR
        CLEARLINE
        sleep 2
    else
        let count=count-1
        echo
        echo "Exim Queue checks remaining: $count"
        SEPARATOR
        CLEARLINE
        sleep 2
    fi
done
}

# Gives areas to check for spam if buildup is detected, or exits cleanly
QUEUE_CHECK_OUTCOME () {
if [ $queuecheck -gt 2 ]; then
    echo
    RED
    echo Exim Queue grew immediately.  Futher SPAM inspection/cleanup is required.
    echo
    echo "Checking possible SPAM Script Directories..."
    printf "\n\n"
    tput sgr0
    echo "The following directories should be checked for SPAM Scripts:"
    echo "-------------------------------------------------------------"
    echo
    grep cwd /var/log/exim_mainlog | grep "$today" | grep -v /var/spool | awk -F"cwd=" '{print $2}' | awk '{print $1}' | sort | uniq -c | sort -n | tail -5
    printf "\n\n\n"
    echo "The following Exim Log Entries should be checked as well, they may indicate compromised account passwords:"
    echo "----------------------------------------------------------------------------------------------------------"
    mkdir -p /root/support
    exim -bp | awk '{print $3}' >> /root/support/mailids_$(date +"%T_%m-%d-%Y")
    for id in $(cat /root/support/mailids_*); do printf "\n" && grep $id /var/log/exim_mainlog && printf "\n\n"; done
    SEPARATOR
    tput sgr0
    exit 1
else
    echo
    GREEN
    echo The Exim Queue appears to be stable, no further action is needed.
    SEPARATOR
    tput sgr0
    exit 0
fi
}

#####################
##-----------------##
## END - FUNCTIONS ##
##-----------------##
#####################

#########################
##---------------------##
## BEGIN - CORE SCRIPT ##
##---------------------##
#########################

clear
HEADER
GREEN
echo Stopping Exim...
echo
WHITE
service exim stop &&
sleep 1
clear
HEADER
GREEN
echo Moving Exim Queue Out of Exim...
mv /var/spool/exim /var/spool/exim.bak &&
sleep 1
clear
HEADER
GREEN
echo Restarting Exim...
echo
WHITE
service exim start &&
sleep 1
clear
HEADER
YELLOW
echo Purging Exim Queue
sleep 1
echo
echo This might take a moment...
sleep 1
rm -rf /var/spool/exim.bak &&
clear
HEADER
GREEN
echo Exim Queue Purge Complete
sleep 2
echo
YELLOW
echo Checking for immediate Exim Queue buildup
sleep 1
WHITE
printf "(Immediate buildup may indicate further "
RED
printf "SPAM"
WHITE
printf " cleanup is required)"
sleep 3
SEPARATOR
QUEUE_CHECK
QUEUE_CHECK_OUTCOME

#######################
##-------------------##
## END - CORE SCRIPT ##
##-------------------##
#######################